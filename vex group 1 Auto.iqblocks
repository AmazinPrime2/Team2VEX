{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable></variables><block type=\"iq_events_when_touchled\" id=\"fWxN9Npqn!21AqW4aXO%\" x=\"150\" y=\"-90\"><field name=\"TOUCHLED\">RedLeft</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"procedures_call\" id=\"RfEn7$SQ1qD}hY/du0@%\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Drive %n\" proceduredefid=\"GJW#]#CBIY`[%6N7,eSl\" argumentids=\"[&quot;wCawOQR;rFWii?rXTq*K&quot;]\" warp=\"false\"></mutation><value name=\"wCawOQR;rFWii?rXTq*K\"><shadow type=\"math_number\" id=\"q4L,.Sfk[8r:C}iSyeX6\"><field name=\"NUM\">250</field></shadow></value></block></next></block><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"1090\" y=\"-130\"><next><block type=\"iq_motion_set_motor_stopping\" id=\".-r@^DVMV*v44MwJWkIi\"><field name=\"MOTOR\">Elevator</field><field name=\"MODE\">hold</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"Yg^SQ08T.`1]vOW1niHD\"><field name=\"MOTOR\">TheClaw</field><field name=\"MODE\">hold</field></block></next></block></next></block><block type=\"procedures_definition\" id=\"ye8OeW_-wkd!rn{D(+q]\" x=\"470\" y=\"-30\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"!(mqz#w6[#KH}Cl.W:N:\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"turn right %n\" proceduredefid=\"!(mqz#w6[#KH}Cl.W:N:\" argumentids=\"[&quot;_5@Sp`mT:V{1s,qy#rqC&quot;]\" argumentnames=\"[&quot;number&quot;]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"_5@Sp`mT:V{1s,qy#rqC\"><shadow type=\"argument_reporter_number\" id=\"xS]+k8UW3e:(WNd%A/_j\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"turn_right_number\" argumentid=\"_5@Sp`mT:V{1s,qy#rqC\" proceduredefid=\"!(mqz#w6[#KH}Cl.W:N:\"></mutation><field name=\"VALUE\">number</field></shadow></value></shadow></statement><next><block type=\"iq_drivetrain_turn_for\" id=\"T6|u.n`W7[oic^K)XC1x\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"9d^w7zEu64Ul++je[DE?\"><field name=\"NUM\">90</field></shadow><block type=\"argument_reporter_number\" id=\"R_4Y?qZ4c{p89gd+#9bM\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"turn_right_number\" argumentid=\"_5@Sp`mT:V{1s,qy#rqC\" proceduredefid=\"!(mqz#w6[#KH}Cl.W:N:\"></mutation><field name=\"VALUE\">number</field></block></value></block></next></block><block type=\"procedures_definition\" id=\"~0B@^Ijh^c-qj4/%}oxt\" x=\"130\" y=\"70\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"Z1PY5W.1ds*4]Gh)2F$:\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"turn left %n\" proceduredefid=\"Z1PY5W.1ds*4]Gh)2F$:\" argumentids=\"[&quot;t7iZY7h@BURkH7FMip2z&quot;]\" argumentnames=\"[&quot;number&quot;]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"t7iZY7h@BURkH7FMip2z\"><shadow type=\"argument_reporter_number\" id=\"~{JA2e{66Us!7^S-4s82\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"turn_left_number\" argumentid=\"t7iZY7h@BURkH7FMip2z\" proceduredefid=\"Z1PY5W.1ds*4]Gh)2F$:\"></mutation><field name=\"VALUE\">number</field></shadow></value></shadow></statement><next><block type=\"iq_drivetrain_turn_for\" id=\"]PR(zGo-fy-:0J9VWP8z\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"E42c:SNN0wN?`1QUpt3j\"><field name=\"NUM\">90</field></shadow><block type=\"argument_reporter_number\" id=\"w8Z*O2?%eGub0KamYAr8\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"turn_left_number\" argumentid=\"t7iZY7h@BURkH7FMip2z\" proceduredefid=\"Z1PY5W.1ds*4]Gh)2F$:\"></mutation><field name=\"VALUE\">number</field></block></value></block></next></block><block type=\"procedures_definition\" id=\"YFF!r$TCAP}5nCTu[mom\" x=\"510\" y=\"130\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"$8@GV,w?J)BHn*m25w](\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"TheElevation\" proceduredefid=\"$8@GV,w?J)BHn*m25w](\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_motion_spin_for\" id=\"%=$y1m@fNofC4sp%$yy,\"><field name=\"MOTOR\">Elevator</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"M^8X66%m$:(E8BKnHj{P\"><field name=\"NUM\">90</field></shadow></value></block></next></block><block type=\"procedures_definition\" id=\"u-66sl/_{?uQ=Z=_/^MJ\" x=\"290\" y=\"250\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"~O;$nbnSg^*#F=FvoRX5\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"claw grip\" proceduredefid=\"~O;$nbnSg^*#F=FvoRX5\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[&quot;todo&quot;]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_motion_spin_for\" id=\"Lba@h{rU0]fBctS98Fg^\"><field name=\"MOTOR\">TheClaw</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"x8}A6H|ca;Hy{|F|@_|n\"><field name=\"NUM\">90</field></shadow></value></block></next></block><block type=\"procedures_definition\" id=\"K#)r4=P=CGG]SZIvc$YV\" x=\"250\" y=\"390\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"GJW#]#CBIY`[%6N7,eSl\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"Drive %n\" proceduredefid=\"GJW#]#CBIY`[%6N7,eSl\" argumentids=\"[&quot;wCawOQR;rFWii?rXTq*K&quot;]\" argumentnames=\"[&quot;distance&quot;]\" argumentdefaults=\"[&quot;todo&quot;,&quot;todo&quot;]\" argumenttypes=\"[&quot;n&quot;]\" warp=\"false\"></mutation><value name=\"wCawOQR;rFWii?rXTq*K\"><shadow type=\"argument_reporter_number\" id=\"f^K/MHsC?+#F!9)zOsa!\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Drive_distance\" argumentid=\"wCawOQR;rFWii?rXTq*K\" proceduredefid=\"GJW#]#CBIY`[%6N7,eSl\"></mutation><field name=\"VALUE\">distance</field></shadow></value></shadow></statement><next><block type=\"iq_drivetrain_drive_for\" id=\"0B|6j7UNZWe1RBC`m]sZ\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"9V!7GZVI`;zR6xdl*?o/\"><field name=\"NUM\">250</field></shadow><block type=\"argument_reporter_number\" id=\"lO%6r-4IdFnuzF%=oTLq\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" funcname=\"Drive_distance\" argumentid=\"wCawOQR;rFWii?rXTq*K\" proceduredefid=\"GJW#]#CBIY`[%6N7,eSl\"></mutation><field name=\"VALUE\">distance</field></block></value></block></next></block></xml>","rconfig":[{"port":[1,6,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"}},{"port":[5,2],"name":"Elevator","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"down","rev":"up","motor_a_reversed":"false","motor_b_reversed":"true"}},{"port":[3],"name":"TheClaw","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"open","rev":"close"}},{"port":[4],"name":"RedLeft","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[8],"name":"RightBlue","customName":true,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}}],"slot":1,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"3.0.4","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT6, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 173, 76, mm, 1);\nmotor ElevatorMotorA = motor(PORT5, false);\nmotor ElevatorMotorB = motor(PORT2, true);\nmotor_group Elevator = motor_group(ElevatorMotorA, ElevatorMotorB);\n\nmotor TheClaw = motor(PORT3, true);\ntouchled RedLeft = touchled(PORT4);\ntouchled RightBlue = touchled(PORT8);\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_turn_right_number(double myblockfunction_turn_right_number__number);\n// User defined function\nvoid myblockfunction_turn_left_number(double myblockfunction_turn_left_number__number);\n// User defined function\nvoid myblockfunction_TheElevation();\n// User defined function\nvoid myblockfunction_claw_grip();\n// User defined function\nvoid myblockfunction_Drive_distance(double myblockfunction_Drive_distance__distance);\n\nfloat myVariable;\n\n// User defined function\nvoid myblockfunction_turn_right_number(double myblockfunction_turn_right_number__number) {\n  Drivetrain.turnFor(right, myblockfunction_turn_right_number__number, degrees, true);\n}\n\n// User defined function\nvoid myblockfunction_turn_left_number(double myblockfunction_turn_left_number__number) {\n  Drivetrain.turnFor(left, myblockfunction_turn_left_number__number, degrees, true);\n}\n\n// User defined function\nvoid myblockfunction_TheElevation() {\n  Elevator.spinFor(reverse, 90.0, degrees, true);\n}\n\n// User defined function\nvoid myblockfunction_claw_grip() {\n  TheClaw.spinFor(forward, 90.0, degrees, true);\n}\n\n// User defined function\nvoid myblockfunction_Drive_distance(double myblockfunction_Drive_distance__distance) {\n  Drivetrain.driveFor(forward, myblockfunction_Drive_distance__distance, mm, true);\n}\n\n// \"when RedLeft pressed\" hat block\nvoid onevent_RedLeft_pressed_0() {\n  myblockfunction_Drive_distance(250.0);\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Elevator.setStopping(hold);\n  TheClaw.setStopping(hold);\n  return 0;\n}\n\n\nint main() {\n  // register event handlers\n  RedLeft.pressed(onevent_RedLeft_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}